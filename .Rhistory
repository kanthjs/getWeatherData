weather_data <- list_rbind(data_list, names_to = "var")
return(weather_data)
}
# --- Download Domain 1 data ---
d01.vars <- c("t2m", "rhum", "p3h")
library(tidyverse)
library(lubridate)
# --- Download Domain 1 data ---
d01.vars <- c("t2m", "rhum", "p3h")
weather_d01 <- get_tmd_weather(domain = "d01", vars = d01.vars)
saveRDS(weather_d01, file = paste0("weather_forecast_d01_", today, ".rds"))
View(weather_d01)
paste0("weather_forecast_d01_", today, ".rds")
today <- format(Date, "%Y%m%d")
saveRDS(weather_d01, file = paste0("weather_forecast_d01_", today, ".rds"))
paste0("weather_forecast_d01_", today, ".rds")
format(Date, "%Y%m%d")
main.domain <- "https://hpc.tmd.go.th/static/csv/"
Date <- Sys.Date() - 1
today <- format(Date, "%Y%m%d")
when <- "00"
urls <- paste0(
main.domain, today, when, "/", vars, ".", domain, ".", today, when, ".csv"
)
urls <- paste0(
main.domain, today, when, "/", vars, ".", domain, ".", today, when, ".csv"
)
domain <- d01
domain <- "d01"
urls <- paste0(
main.domain, today, when, "/", vars, ".", domain, ".", today, when, ".csv"
)
library(tidyverse)
library(lubridate)
library(tibble)
library(nplyr)
### 1. Here is for retrieve the data ####
main.domain <- "https://hpc.tmd.go.th/static/csv/"
# we need to specify the data you want to retrieve data
#format 20240422"
#this.time = "20241016"
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
#time at 1am in that day
when <- "00"
#### domain 1 ####
d01.vars <- c("t2m", "rhum", "p3h")
tmd.data.list <- list()
for (i in 1:length(d01.vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
d01.vars[i],
".d01." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
names(tmd.list) <- d01.vars
weather <- list_rbind(tmd.list, names_to = "var")
library(tidyverse)
library(lubridate)
today <- format(Date, "%Y%m%d")
# --- Function to download and process weather data ---
get_tmd_weather <- function(domain, vars) {
main.domain <- "https://hpc.tmd.go.th/static/csv/"
Date <- Sys.Date() - 1
today <- format(Date, "%Y%m%d")
when <- "00"
urls <- paste0(
main.domain, today, when, "/", vars, ".", domain, ".", today, when, ".csv"
)
data_list <- map(urls, read_csv)
names(data_list) <- vars
weather_data <- list_rbind(data_list, names_to = "var")
return(weather_data)
}
# --- Download Domain 1 data ---
d01.vars <- c("t2m", "rhum", "p3h")
weather_d01 <- get_tmd_weather(domain = "d01", vars = d01.vars)
saveRDS(weather_d01, file = paste0("weather_forecast_d01_", today, ".rds"))
paste0("weather_forecast_d01_", today, ".rds")
format(Date, "%Y%m%d")
Date <-  Sys.Date() - 1 |> as.Date(format = "%Y-%m-%d")
Date
Sys.Date() - 1
Date |> as.Date(format = "%Y%m%d")
Date |> as.Date(format = "%Y-%m-%d")
Date |> as.Date(format = "%Y-%m-%d")
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- (Sys.Date() - 1) |> as.Date(format = "%Y-%m-%d") |>
paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Date |>
paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Date |>  paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Date |>  paste0(format.Date(Date,  "%Y-%m-%d"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Sys.Date() - 1  |>  paste0(format.Date(Date,  "%Y-%m-%d"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Sys.Date() - 1 |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Sys.Date() - 1 |> as.Date(format = "%Y-%m-%d") |>
paste0(format.Date(Date,  "%Y-%m-%d"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- Sys.Date() - 1 |> as.Date(format = "%Y-%m-%d") |>
paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
Date <-  Sys.Date() - 1
Date <- Date |> as.Date(format = "%Y-%m-%d")
#as.Date("01-01-2016", format = "%m-%d-%Y")
today <- paste0(format.Date(Date, "%Y"),
format.Date(Date, "%m"),
format.Date(Date, "%d"))
# --- Function to download and process weather data ---
get_tmd_weather <- function(domain, vars) {
main.domain <- "https://hpc.tmd.go.th/static/csv/"
Date <- Sys.Date() - 1
today <- format(Date, "%Y%m%d")
when <- "00"
urls <- paste0(
main.domain, today, when, "/", vars, ".", domain, ".", today, when, ".csv"
)
data_list <- map(urls, read_csv)
names(data_list) <- vars
weather_data <- list_rbind(data_list, names_to = "var")
return(weather_data)
}
# --- Download Domain 1 data ---
d01.vars <- c("t2m", "rhum", "p3h")
weather_d01 <- get_tmd_weather(domain = "d01", vars = d01.vars)
saveRDS(weather_d01, file = paste0("weather_forecast_d01_", today, ".rds"))
# --- Download Domain 2 data ---
d02.vars <- c("t2m", "rhum", "p1h")
weather_d02 <- get_tmd_weather(domain = "d02", vars = d02.vars)
saveRDS(weather_d02, file = paste0("weather_forecast_d02_", today, ".rds"))
saveRDS(weather_d02, file = paste0("weather_forecast_d02_", today, ".rds"))
# dataframe
disease_data <- data.frame(
date = rep(seq(Sys.Date() - 14, Sys.Date(), by = "day"), each = 5),
province = rep(c("Chiang Mai", "Lampang", "Phrae", "Nan", "Phayao"), 15),
lat = rep(c(18.79, 18.28, 18.14, 18.78, 19.18), 15),
lon = rep(c(98.98, 99.50, 100.14, 100.78, 99.88), 15),
rice_stage = sample(c("Seedling", "Tillering", "Panicle Initiation", "Flowering", "Maturity"), 75, replace = TRUE),
disease = sample(c("Blast", "Brown Spot", "Sheath Blight", "Tungro", "Bacterial Leaf Blight",
"False Smut", "Stem Rot", "Leaf Scald", "Healthy"), 75, replace = TRUE)
)
# build shuny app.
ui <- fluidPage(
titlePanel("Disease Monitoring"),
sidebarLayout(
sidebarPanel(
selectInput("province", "Select Province", choices = unique(disease_data$province)),
selectInput("rice_stage", "Select Rice Stage", choices = unique(disease_data$rice_stage)),
selectInput("disease", "Select Disease", choices = unique(disease_data$disease))
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output, session) {
output$map <- renderLeaflet({
leaflet(disease_data) %>%
addProviderTiles("CartoDB.Positron") %>%
setView(lng = 100.78, lat = 18.78, zoom = 7)
})
}
shinyApp(ui = ui, server = server)
# dataframe
library(shiny)
shinyApp(ui = ui, server = server)
# build shuny app.
ui <- fluidPage(
titlePanel("Disease Monitoring"),
sidebarLayout(
sidebarPanel(
selectInput("province", "Select Province", choices = unique(disease_data$province)),
selectInput("rice_stage", "Select Rice Stage", choices = unique(disease_data$rice_stage)),
selectInput("disease", "Select Disease", choices = unique(disease_data$disease))
),
mainPanel(
leafletOutput("map")
)
)
)
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
# build shuny app.
ui <- fluidPage(
titlePanel("Disease Monitoring"),
sidebarLayout(
sidebarPanel(
selectInput("province", "Select Province", choices = unique(disease_data$province)),
selectInput("rice_stage", "Select Rice Stage", choices = unique(disease_data$rice_stage)),
selectInput("disease", "Select Disease", choices = unique(disease_data$disease))
),
mainPanel(
leafletOutput("map")
)
)
)
library(leaflet)
install.packages("leaflet")
# read RDS data in working directory
readRDS("weather_forecast_d01_20211010.rds")
# read RDS data in working directory
readRDS("weather_forecast_d01_20241216.rds")
# read RDS data in working directory
weather <- readRDS("weather_forecast_d01_20241216.rds")
small_weather <- weather |> group_by(var, lat, lon) |> slice_head(n = 8)
library(tidyverse)
small_weather <- weather |> group_by(var, lat, lon) |> slice_head(n = 8)
View(small_weather)
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
library(nplyr)
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
View(s.test)
View(s.test[[3]][[1]])
s.test %>% head()
h.test <- s.test %>% head()
View(h.test)
View(h.test[[3]][[1]])
h.test |>
nest_mutate(weather_data, dat = substr(time, 1, regexpr("_", time) - 1),
time_n = substr(time, regexpr("_", time) + 1, nchar(time) - 1))
test 1<- h.test |>
test_1 <- h.test |>
nest_mutate(weather_data, dat = substr(time, 1, regexpr("_", time) - 1),
time_n = substr(time, regexpr("_", time) + 1, nchar(time) - 1))
View(test_1)
View(test_1[[3]][[1]])
# read RDS data in working directory
weather <- readRDS("weather_forecast_d02_20241216.rds")
small_weather <- weather |> group_by(var, lat, lon) |> slice_head(n = 8)
#
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
# read RDS data in working directory
weather <- readRDS("weather_test.rds")
View(weather)
small_weather <- weather |> group_by(var, lat, lon) |> slice_head(n = 8)
# read RDS data in working directory
weather <- readRDS("weather_forecast_d01_20241022.rds")
# read RDS data in working directory
weather <- readRDS("weather_forecast_d02_20241022.rds")
small_weather <- weather |> group_by(var, lat, lon)
#
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
# transform to data.table
small_weather_dt <- as.data.table(small_weather)
library(data.table)
# transform to data.table
small_weather_dt <- as.data.table(small_weather)
View(small_weather_dt)
#
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
#
s.test <- small_weather_dt |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
# read RDS data in working directory
weather <- readRDS("weather_forecast_d01_20241022.rds")
small_weather <- weather |> group_by(var, lat, lon)
#
s.test <- small_weather |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
# select only 6 row
h.test <- s.test %>% head()
test_1 <- h.test |>
nest_mutate(weather_data,
dat = substr(time, 1, regexpr("_", time) - 1),
time_n = substr(time, regexpr("_", time) + 1, nchar(time) - 1)
)
View(test_1)
View(test_1[[3]][[1]])
View(test_1[[3]][[1]])
test_1 %>% nest_group_by(weather_data, dat) |>
nest_mutate(weather_data,
BUS = if_else(tc > 14, 1, 0),
BUS1 = if_else(rh > 90, 1, 0),
BUS2 = if_else(rain >= 0.1, 1, 0),
BUS3 = if_else(tc > 14, BUS2 / 4, 0),
BUS4 = if_else(rh > 90, BUS3 + ((BUS1 - 12) / 6), BUS3),
BUS5 = if_else(tc < 23 & tc > 26, BUS4 - 2, BUS4),
BUS6 = if_else(tc < 19 & tc > 29, BUS5 - 2, BUS4)
)
test_1 %>% nest_group_by(weather_data, dat) |>
nest_mutate(weather_data,
BUS = if_else(tc > 14, 1, 0),
BUS1 = if_else(rhum > 90, 1, 0),
BUS2 = if_else(p3h >= 0.1, 1, 0),
BUS3 = if_else(tc > 14, BUS2 / 4, 0),
BUS4 = if_else(rhum > 90, BUS3 + ((BUS1 - 12) / 6), BUS3),
BUS5 = if_else(tc < 23 & tc > 26, BUS4 - 2, BUS4),
BUS6 = if_else(tc < 19 & tc > 29, BUS5 - 2, BUS4)
)
test2 <- test_1 %>% nest_group_by(weather_data, dat) |>
nest_mutate(weather_data,
BUS = if_else(tc > 14, 1, 0),
BUS1 = if_else(rhum > 90, 1, 0),
BUS2 = if_else(p3h >= 0.1, 1, 0),
BUS3 = if_else(tc > 14, BUS2 / 4, 0),
BUS4 = if_else(rhum > 90, BUS3 + ((BUS1 - 12) / 6), BUS3),
BUS5 = if_else(tc < 23 & tc > 26, BUS4 - 2, BUS4),
BUS6 = if_else(tc < 19 & tc > 29, BUS5 - 2, BUS4)
)
View(test2)
View(test2[[3]][[1]])
View(test_1[[3]][[1]])
View(test_1[[3]][[1]])
test2 <- test_1 %>% nest_group_by(weather_data, dat) |>
nest_mutate(weather_data,RH2 = if_else(rhum > 90, 1, 0),
WT = if_else(rhum >= 87, 1, 0)      )
test2 <- test_1 %>% nest_mutate(weather_data,
RH2 = if_else(rhum > 90, 1, 0),
WT = if_else(rhum >= 87, 1, 0))
test3 <- test2 %>% nest_group_by(weather_data, dat) |>
nest_summarise(Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT))
test3 <- test2 %>% nest_group_by(weather_data, dat) |>
nest_summarise(weather_data,
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT))
View(test3)
View(test3[[3]][[1]])
View(test3[[3]][[1]])
test3 <- test2 %>% nest_group_by(weather_data, dat) |>
nest_summarise(weather_data,
n_records = n(),
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT))
View(test3[[3]][[1]])
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(tc > 14, WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12) / 6), BUS1),
BUS3 = if_else(tc < 23 & tc > 26, BUS2 - 2, BUS2),
BUS4 = if_else(tc < 19 & Tc > 29, BUS3 - 2, BUS2)
)
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12) / 6), BUS1),
BUS3 = if_else(tc < 23 & tc > 26, BUS2 - 2, BUS2),
BUS4 = if_else(tc < 19 & Tc > 29, BUS3 - 2, BUS2)
)
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12)/6), BUS1),
BUS3 = if_else(Tbar < 23 & Tbar > 26, BUS2 - 2, BUS2),
BUS4 = if_else(Tbar < 19 & Tbar > 29, BUS3 - 2, BUS2)
)
View(test4)
View(test4[[3]][[1]])
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12)/6), BUS1),
BUS3 = if_else(Tbar < 23 & Tbar > 26, BUS2 - 2, BUS2),
BUS4 = if_else(Tbar < 19 & Tbar > 29, BUS3 - 2, BUS2)
) %>%
nest_summarise(weather_data,
index = if_else(BUS4 >= 2.25, 1, 0))
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12)/6), BUS1),
BUS3 = if_else(Tbar < 23 & Tbar > 26, BUS2 - 2, BUS2),
BUS4 = if_else(Tbar < 19 & Tbar > 29, BUS3 - 2, BUS2)
) %>%
nest_summarise(weather_data,
index = if_else(BUS4 >= 2.25, 1, 0)
)
test4 |> unnest(weather_data) |> head()
test4 <- test3 %>% nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT/4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12)/6), BUS1),
BUS3 = if_else(Tbar < 23 & Tbar > 26, BUS2 - 2, BUS2),
BUS4 = if_else(Tbar < 19 & Tbar > 29, BUS3 - 2, BUS2)
) %>%
nest_summarise(weather_data,
index_BUS = if_else(BUS4 >= 2.25, 1, 0)
)
test4 |> unnest(weather_data) |> head()
h.test
library(nplyr)
library(tidyverse)
process_weather_data <- function(data) {
data %>%
# Gather the data into key-value pairs, excluding lat and lon
gather(key = "time", value = "value", c(-lat, -lon, -var)) %>%
# Spread the key-value pairs into wider format
pivot_wider(names_from = var, values_from = value) %>%
# Nest the weather data by lat and lon
nest(weather_data = c(-lat, -lon)) %>%
# Convert temperature from Kelvin to Celsius
nest_mutate(weather_data, tc = t2m - 273.15) %>%
# Extract date and time components from the time string
nest_mutate(weather_data,
dat = substr(time, 1, regexpr("_", time) - 1),
time_n = substr(time, regexpr("_", time) + 1, nchar(time) - 1)) %>%
# Create binary indicators for relative humidity thresholds
nest_mutate(weather_data,
RH2 = if_else(rhum > 90, 1, 0),
WT = if_else(rhum >= 87, 1, 0)) %>%
# Group by date
nest_group_by(weather_data, dat) %>%
# Summarize records per group
nest_summarise(weather_data,
n_records = n(),
Tbar = mean(tc, na.rm = TRUE),
cum_RH2 = sum(RH2, na.rm = TRUE),
cum_WT = sum(WT, na.rm = TRUE)) %>%
# Calculate BUS indices
nest_mutate(weather_data,
BUS1 = if_else(Tbar > 14, cum_WT / 4, 0),
BUS2 = if_else(cum_RH2 >= 16, BUS1 + ((cum_RH2 - 12) / 6), BUS1),
BUS3 = if_else(Tbar < 23 & Tbar > 26, BUS2 - 2, BUS2),
BUS4 = if_else(Tbar < 19 & Tbar > 29, BUS3 - 2, BUS2),
index_BUS = if_else(BUS4 >= 2.25, 1, 0)) %>%
# Unnest the weather data
unnest(weather_data)
}
# Example usage:
# result <- process_weather_data(h.test)
# head(result)
# Example usage:
# result <- process_weather_data(h.test)
# head(result)
# read RDS data in working directory
weather <- readRDS("weather_forecast_d01_20241105.rds")
result <- weather %>% process_weather_data()
View(result)
result %>% select(index_BUS)
result %>% select(lat, lon)
result %>% select(lat, lon) %>% group_by(lat, lon) %>% summarise(n = n())
dummy <- result %>% select(lat, lon) %>% group_by(lat, lon) %>%
summarise(n = n()) %>%
select(lat, lon)
dummy <- result %>% select(lat, lon) %>% group_by(lat, lon) %>%
summarise(n = n()) %>%
select(lat, lon) %>%
ungroup()
dummy$index_BUS <- sample(0:1, size = 26880, replace=TRUE)
View(dummy)
## call province latlon and shp
THprovince_latlon <- readRDS("THprovince_latlon.rds")
View(weather)
View(disease_data)
View(dummy)
View(h.test)
View(result)
View(s.test)
View(s.test[[3]][[1]])
View(s.test[[3]][[1]])
